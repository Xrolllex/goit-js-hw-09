{"mappings":"AAAA,MAAMA,EAAQC,SAASC,iBAAiB,SAClCC,EAAYF,SAASG,cAAc,UACzC,IAAIC,EAEJ,MAAMC,EAAgB,CAACC,EAAUC,KACTC,KAAKC,SAAW,GAEpCC,QAAQC,IAAI,uBAAqBL,QAAiBC,OAEhDG,QAAMC,IAAI,sBAAoBL,QAAeC,MAAU,EAyB7DL,EAAUU,iBAAiB,SArBdC,IACXA,EAAMC,iBACN,IAAIC,EAAQ,EACRR,EAAQS,OAAOjB,EAAM,GAAGkB,OAE5BC,YAAW,KACTb,EAAcU,EAAMR,GACpBH,EAAQe,aAAY,KACpBJ,IACAR,GAASS,OAAOjB,EAAM,GAAGkB,OAEzBZ,EAAcU,EAAMR,GAChBQ,EAAQC,OAAOjB,EAAM,GAAGkB,OAAS,GACnCG,cAAchB,EAAM,GAGpBL,EAAM,GAAGkB,MAAM,GAEjBlB,EAAM,GAAGkB,MAAM","sources":["src/js/03-promises.js"],"sourcesContent":["const input = document.querySelectorAll(\"input\")\nconst createBtn = document.querySelector(\"button\")\nlet timer\n\nconst createPromise = (position, delay) => {\n  const shouldResolve = Math.random() > 0.3\n  if (shouldResolve) {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\n\nconst task = event => {\n  event.preventDefault()\n  let meter = 1\n  let delay = Number(input[0].value)\n\n  setTimeout(() => {\n    createPromise(meter,delay)\n    timer = setInterval(() => {\n    meter ++\n    delay += Number(input[1].value)\n\n    createPromise(meter,delay)\n    if (meter > Number(input[2].value) - 1 ){\n      clearInterval(timer)\n      }\n\n    },input[1].value)\n\n  },input[0].value)\n}\n\ncreateBtn.addEventListener(\"click\", task)"],"names":["$47d4ff9957288465$var$input","document","querySelectorAll","$47d4ff9957288465$var$createBtn","querySelector","$47d4ff9957288465$var$timer","$47d4ff9957288465$var$createPromise","position","delay","Math","random","console","log","addEventListener","event","preventDefault","meter","Number","value","setTimeout","setInterval","clearInterval"],"version":3,"file":"03-promises.6ae18050.js.map"}